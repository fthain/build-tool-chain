##############################################
# Functions relating to host-native tools

function is_installed () {
    if [ $(which $1 | grep -c ${HOST_TOOLS_PREFIX}/bin/$1) -eq 1 ]; then
        echo $1 already installed
        return 0
    fi
    return 1
}

function install_host_tool () {
    is_installed ${1/-*} && return

    echo unpacking $1
    cd $BTC_BUILD
    untar $1

    echo building $1
    cd $1
    CFLAGS="-O2" ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX}
    make

    echo installing $1
    make install
}

function install_sed () {
    is_installed ${1/-*} && return

    # gnu sed-4.1.5 won't build without gnu sed... duh
    if [ $1 = sed-4.1.5 ] ; then
        install_host_tool sed-4.1.4
    fi

    echo unpacking $1
    cd $BTC_BUILD
    untar $1

    echo building $1
    cd $1
    CFLAGS="-O2" ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX}
    make

    echo installing $1
    make install
}

function install_make () {
    is_installed ${1/-*} && return

    install_host_tool $1
    ln -fs make ${HOST_TOOLS_PREFIX}/bin/gnumake
}

function install_coreutils () {
    is_installed readlink && return

    echo unpacking $1
    cd $BTC_BUILD
    untar $1

    echo building $1
    cd $1
    CFLAGS="-O2" ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX}
    make

    echo installing $1
    dst=/tmp/junk$$
    make DESTDIR=$dst install
    cp -p $dst/${HOST_TOOLS_PREFIX}/bin/{readlink,expr,install} ${HOST_TOOLS_PREFIX}/bin
    rm -fr $dst
}

function install_flex () {
    is_installed ${1/-*} && return

    echo unpacking $1
    cd $BTC_BUILD
    untar $1
    cd ${1%a}
    patch -p1 < ${BTC_PATCHES}/flex-2.5.4a-r6.diff

    echo building $1
    CFLAGS="-O2" ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX}
    make

    echo installing $1
    make install
}

function install_depmod () {
    is_installed ${1/-*} && return

    echo installing $1
    cd ${HOST_TOOLS_PREFIX}/bin
    decompress ${BTC_SOURCES}/${1} > depmod.pl
    chmod 755 depmod.pl
}

function install_find_pl () {
    is_installed find.pl && return

    echo installing $1
    cd ${HOST_TOOLS_PREFIX}/bin
    decompress ${BTC_SOURCES}/${1} > find.pl
    chmod 755 find.pl
}

function install_loadkeys () {
    is_installed loadkeys && return
    
    echo unpacking $1
    cd $BTC_BUILD
    untar $1
    cd ${1}
    patch -p1 < ${BTC_PATCHES}/kbd-1.12-gentoo.diff
    patch -p1 < ${BTC_PATCHES}/kbd-1.12-btc-darwin.diff

    echo building $1
    CFLAGS="-O2" ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX}
    cd src
    make analyze.c loadkeys

    cp -p loadkeys ${HOST_TOOLS_PREFIX}/bin
}

function install_gmp () {
    [ -e ${HOST_TOOLS_PREFIX}/lib/libgmp.a ] && return

    echo unpacking $1
    cd $BTC_BUILD
    untar $1

    echo building $1
    cd $1

    local cflags
    local opts
    cflags="-O2"
    if [ ${BUILD} != ${BUILD/%-apple-darwin*} ] ; then
        cflags="$cflags -Wa,-force_cpusubtype_ALL"
        opts=--with-pic
    fi
    CFLAGS="$cflags" ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX} --with-gmp=${HOST_TOOLS_PREFIX} $opts
    make

    echo installing $1
    make install
}

function install_mpfr () {
    [ -e ${HOST_TOOLS_PREFIX}/lib/libmpfr.a ] && return

    echo unpacking $1
    cd $BTC_BUILD
    untar $1
    cd $1
    patch -p1 < ${BTC_PATCHES}/mpfr-2.3.0-20070911.patch

    echo building $1
    CFLAGS="-O2" ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX} --with-gmp=${HOST_TOOLS_PREFIX}
    make

    echo installing $1
    make install
}
