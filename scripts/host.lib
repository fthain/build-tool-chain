##############################################
#
# Functions relating to host-native tools

function host_tool_license () {
    mkdir -p ${HOST_TOOLS_PREFIX}/share/doc
    local pn
    pn=${1%%-[0-9]*}
    cat ${BTC_BUILD}/${1}/COPYING* > ${HOST_TOOLS_PREFIX}/share/doc/${pn}-licenses
}

function host_tool_install () {
    echo building $1
    pushd $BTC_BUILD/$1 >/dev/null

    CFLAGS="-O2 $HOST_CFLAGS" CXXFLAGS="-O2 $HOST_CXXFLAGS" \
    ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX} \
                --infodir=${HOST_TOOLS_PREFIX}/share/info \
                --mandir=${HOST_TOOLS_PREFIX}/share/man
    make ${MAKE_OPTS}

    echo installing $1
    rm -rf ${BTC_BUILD}/image
    make DESTDIR=${BTC_BUILD}/image install
    popd >/dev/null
}

function host_tool_unpack_and_install () {
    echo unpacking $1
    pushd $BTC_BUILD >/dev/null
    untar "$@"
    popd >/dev/null
    host_tool_install $1
}

function host_tool_merge () {
    pushd ${BTC_BUILD}/image/${HOST_TOOLS_PREFIX} >/dev/null
    test -d share/man && ln -nsf share/man ${BTC_BUILD}/image/man
    rm -f share/info/dir
    if test -d lib ; then
        find lib -type f -name '*.la' -print0 | xargs -0 rm -fv
    fi
    tar -c "$@" | tar -C ${HOST_TOOLS_PREFIX} -xpv
    popd >/dev/null
    rm -rf ${BTC_BUILD}/image
}

function install_sed () {
    test -e ${HOST_TOOLS_PREFIX}/bin/${1%%-*} && return

    host_tool_unpack_and_install $1 ftp://ftp.gnu.org/gnu/sed/
    ln -nsf sed ${BTC_BUILD}/image/${HOST_TOOLS_PREFIX}/bin/gsed
    host_tool_merge bin share/{info,man}
    host_tool_license $1
}

function install_make () {
    test -e ${HOST_TOOLS_PREFIX}/bin/${1%%-*} && return

    echo preparing $1
    pushd $BTC_BUILD >/dev/null
    untar $1 ftp://ftp.gnu.org/gnu/make/
    if test "${1#*-}" = 3.82 ; then
      patch -d ${1} -p1 < ${BTC_PATCHES}/make-3.82-r4-gentoo.diff
    fi
    popd >/dev/null

    host_tool_install $1
    ln -nsf make ${BTC_BUILD}/image/${HOST_TOOLS_PREFIX}/bin/gnumake
    host_tool_merge bin share/{info,man}
    host_tool_license $1
}

function install_gettext () {
    test -e ${HOST_TOOLS_PREFIX}/bin/${1%%-*} && return

    host_tool_unpack_and_install $1 ftp://ftp.gnu.org/gnu/gettext/
    host_tool_merge bin lib include share/{info,man}
    host_tool_license $1
}

function install_coreutils () {
    test -e ${HOST_TOOLS_PREFIX}/bin/readlink && return

    echo unpacking $1
    pushd $BTC_BUILD >/dev/null
    untar $1 ftp://ftp.gnu.org/gnu/coreutils/

    pushd $1 >/dev/null
    echo building $1

    CFLAGS="-O2 $HOST_CFLAGS" \
    ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX}
    make ${MAKE_OPTS}

    echo installing $1

    rm -rf ${BTC_BUILD}/image
    make DESTDIR=${BTC_BUILD}/image install
    popd >/dev/null
    popd >/dev/null

    host_tool_merge bin/{readlink,expr,install}
    host_tool_license $1
}

function install_loadkeys () {
    test -e ${HOST_TOOLS_PREFIX}/bin/loadkeys && return
    
    echo preparing $1
    pushd $BTC_BUILD >/dev/null
    untar $1 ftp://ftp.kernel.org/pub/linux/utils/kbd/

    pushd $1 >/dev/null
    patch -p1 < ${BTC_PATCHES}/kbd-1.12-gentoo.diff
    patch -p1 < ${BTC_PATCHES}/kbd-1.12-btc-darwin.diff
    patch -p1 < ${BTC_PATCHES}/kbd-1.12-use-env-vars.diff

    echo building $1

    CFLAGS="-O2 $HOST_CFLAGS" \
    ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX}
    pushd src >/dev/null
    make analyze.c loadkeys
    cp -p loadkeys ${HOST_TOOLS_PREFIX}/bin
    popd >/dev/null
    popd >/dev/null
    popd >/dev/null

    host_tool_license $1
}

function install_find_pl () {
    local pn
    pn=find.pl
    test -e ${HOST_TOOLS_PREFIX}/bin/${pn} && return

    echo installing $pn

    if ! test -f ${BTC_SOURCES}/${pn}.bz2 ; then
        fetch_stdout http://www.telegraphics.com.au/~fthain/sw/${pn} \
            | bzip2 -c > ${BTC_SOURCES}/${pn}.bz2
    fi
    decompress ${BTC_SOURCES}/${pn} > ${HOST_TOOLS_PREFIX}/bin/${pn}
    chmod 755 ${HOST_TOOLS_PREFIX}/bin/${pn}
}

function install_gawk () {
    test -e ${HOST_TOOLS_PREFIX}/bin/${1%%-*} && return

    host_tool_unpack_and_install $1 ftp://ftp.gnu.org/gnu/gawk/
    ln -nsf gawk ${BTC_BUILD}/image/${HOST_TOOLS_PREFIX}/bin/awk
    host_tool_merge bin/{gawk,awk} share/info/gawk.info share/man/man1/gawk.1
    host_tool_license $1
}

function install_bison () {
    test -e ${HOST_TOOLS_PREFIX}/bin/${1%%-*} && return

    host_tool_unpack_and_install $1 ftp://ftp.gnu.org/gnu/bison/
    host_tool_merge bin share
    host_tool_license $1
}

function install_flex () {
    test -e ${HOST_TOOLS_PREFIX}/bin/${1%%-*} && return

    echo preparing $1
    local fu
    fu=${1/a/.a}
    pushd $BTC_BUILD >/dev/null
    untar $1 http://mirror.aarnet.edu.au/pub/gentoo/distfiles/${1}.tar.gz \
             http://sourceforge.net/projects/flex/files/flex/${fu#*-}/${1}.tar.gz/download

    mv ${1%a} $1
    patch -d $1 -p1 < ${BTC_PATCHES}/flex-2.5.4a-r6.diff
    popd >/dev/null

    host_tool_install $1
    host_tool_merge bin include share/man
    host_tool_license $1
}

function install_gmp () {
    test -e ${HOST_TOOLS_PREFIX}/include/gmp.h && return

    echo unpacking $1
    pushd $BTC_BUILD >/dev/null
    untar $1 ftp://ftp.gmplib.org/pub/$1/ ftp://ftp.gnu.org/gnu/gmp/

    pushd $1 >/dev/null
    echo building $1

    local opts
    opts=
    local cflags
    cflags=
    case ${BUILD} in
#    ( powerpc-apple-darwin* )
#        cflags="-std=gnu89 -Wa,-force_cpusubtype_ALL"
#        opts="--with-pic"
#        ;;
    ( i386-apple-darwin* )
        # Build failure: duplicate symbols due to extern inline issue
        cflags="-std=gnu89"
#        # Build failure on Mac OS 10.5
#        opts="--build=none-apple-darwin"
        ;;
    esac
    CFLAGS="-O2 $HOST_CFLAGS $cflags" CXXFLAGS="-O2 $HOST_CXXFLAGS $cflags" \
    ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX} \
                --infodir=${HOST_TOOLS_PREFIX}/share/info \
                --enable-cxx --with-gmp=${HOST_TOOLS_PREFIX} \
                --disable-mpfr --disable-mpbsd $opts

    make ${MAKE_OPTS}

    echo installing $1

    rm -rf ${BTC_BUILD}/image
    make DESTDIR=${BTC_BUILD}/image install
    popd >/dev/null
    popd >/dev/null

    host_tool_merge include lib share/info
    host_tool_license $1
}

function install_mpfr () {
    test -e ${HOST_TOOLS_PREFIX}/include/mpfr.h && return

    echo preparing $1
    pushd $BTC_BUILD >/dev/null
    untar $1 http://www.mpfr.org/$1/

    pushd $1 >/dev/null
    if test "${1#*-}" = 2.4.2 ; then
      patch -p1 < ${BTC_PATCHES}/mpfr-2.4.2-gentoo.patch
    elif test "${1#*-}" = 3.1.2 ; then
      patch -p1 < ${BTC_PATCHES}/mpfr-3.1.2_p5-gentoo.diff
    fi

    echo building $1

    local opts
    opts=
#    case ${BUILD} in
#    ( i386-apple-darwin* )
#        opts="--build=none-apple-darwin"
#        ;;
#    esac

    CFLAGS="-O2 $HOST_CFLAGS" \
    ./configure --prefix=${HOST_TOOLS_PREFIX} \
                --with-gmp=${HOST_TOOLS_PREFIX} $opts
    make ${MAKE_OPTS}

    echo installing $1

    rm -rf ${BTC_BUILD}/image
    make DESTDIR=${BTC_BUILD}/image install
    popd >/dev/null
    popd >/dev/null

    host_tool_merge include lib share/info
    host_tool_license $1
}

function install_m4 () {
    test -e ${HOST_TOOLS_PREFIX}/bin/${1%%-*} && return

    host_tool_unpack_and_install $1 ftp://ftp.gnu.org/gnu/m4/
    host_tool_merge bin share
    host_tool_license $1
}

function install_ppl () {
    test -e ${HOST_TOOLS_PREFIX}/include/ppl_c.h && return

    echo unpacking $1
    pushd $BTC_BUILD >/dev/null
    untar $1 ftp://ftp.cs.unipr.it/pub/ppl/releases/${1#*-}/ \
             ftp://gcc.gnu.org/pub/gcc/infrastructure/

    pushd $1 >/dev/null
    echo building $1

    CFLAGS="-O2 $HOST_CFLAGS" \
    ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX} \
                --disable-optimization --enable-interfaces=c,cxx \
                --with-gmp=${HOST_TOOLS_PREFIX}
    make ${MAKE_OPTS}

    echo installing $1

    rm -rf ${BTC_BUILD}/image
    make DESTDIR=${BTC_BUILD}/image install
    popd >/dev/null
    popd >/dev/null

    host_tool_merge include lib share/man/man3
    host_tool_license $1
}

function install_cloog_ppl () {
    test -e ${HOST_TOOLS_PREFIX}/include/cloog && return

    echo unpacking $1
    pushd $BTC_BUILD >/dev/null
    untar $1 ftp://gcc.gnu.org/pub/gcc/infrastructure/

    pushd $1 >/dev/null
    echo building $1

    CFLAGS="-O2 $HOST_CFLAGS" \
    ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX} \
                --with-gmp=${HOST_TOOLS_PREFIX} \
                --with-ppl=${HOST_TOOLS_PREFIX}
    make ${MAKE_OPTS}

    echo installing $1

    rm -rf ${BTC_BUILD}/image
    make DESTDIR=${BTC_BUILD}/image install
    popd >/dev/null
    popd >/dev/null

    host_tool_merge include lib
    mv ${BTC_BUILD}/$1/{LICENSE,COPYING}
    host_tool_license $1
}

function install_mpc () {
    test -e ${HOST_TOOLS_PREFIX}/include/mpc.h && return

    echo unpacking $1
    pushd $BTC_BUILD >/dev/null
    untar $1 http://www.multiprecision.org/mpc/download/${1}.tar.gz

    pushd $1 >/dev/null
    echo building $1

    CFLAGS="-O2 $HOST_CFLAGS" \
    ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX} \
                --with-gmp=${HOST_TOOLS_PREFIX} \
                --with-mpfr=${HOST_TOOLS_PREFIX}
    make ${MAKE_OPTS}

    echo installing $1

    rm -rf ${BTC_BUILD}/image
    make DESTDIR=${BTC_BUILD}/image install
    popd >/dev/null
    popd >/dev/null

    host_tool_merge include lib share/info
    host_tool_license $1
}

function install_libelf () {
    test -e ${HOST_TOOLS_PREFIX}/include/libelf && return

    echo unpacking $1
    pushd $BTC_BUILD >/dev/null
    untar $1 http://www.mr511.de/software/$1.tar.gz

    pushd $1 >/dev/null
    echo building $1

    CFLAGS="-O2 $HOST_CFLAGS" \
    ./configure --disable-nls --prefix=${HOST_TOOLS_PREFIX} \
                --enable-shared --enable-compat
    make ${MAKE_OPTS}

    echo installing $1

    rm -rf ${BTC_BUILD}/image
    make instroot=${BTC_BUILD}/image install
    if test -e /usr/include/nlist.h && ! grep -q elfutils /usr/include/nlist.h
    then
      rm ${BTC_BUILD}/image/${HOST_TOOLS_PREFIX}/include/nlist.h
    fi
    popd >/dev/null
    popd >/dev/null

    host_tool_merge include lib
    host_tool_license $1
}

function install_depmod () {
    local pn
    pn=${1%%-*}
    test -e ${HOST_TOOLS_PREFIX}/bin/${pn} && return

    echo installing $pn

    if ! test -f ${BTC_SOURCES}/${1}.bz2 ; then
        fetch_stdout http://git.busybox.net/busybox/plain/examples/depmod.pl?h=${1#*-} \
            | bzip2 -c > ${BTC_SOURCES}/${1}.bz2
    fi

    decompress ${BTC_SOURCES}/${1} > ${HOST_TOOLS_PREFIX}/bin/${pn}
    chmod 755 ${HOST_TOOLS_PREFIX}/bin/${pn}
}

function install_rsh_redone () {
    echo unpacking $1
    pushd $BTC_BUILD >/dev/null
    untar $1.orig ftp://ftp.debian.org/debian/pool/main/r/rsh-redone/
    PV=${1/_/-}

    pushd $PV >/dev/null
    echo building and installing $PV

    rm -rf ${BTC_BUILD}/image
    make ${MAKE_OPTS} \
         CFLAGS="-O2 $HOST_CFLAGS" \
         PREFIX=${HOST_TOOLS_PREFIX} \
         DESTDIR=${BTC_BUILD}/image \
         install
    popd >/dev/null
    popd >/dev/null

    host_tool_merge bin/{rsh,rlogin}
}
