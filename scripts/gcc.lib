##############################################
#
# Functions relating to gcc

function prep_gcc_core () {
    cd ${BTC_BUILD}
    local c
    c=${1/gcc/gcc-core}
    test -e $c && echo $c already exists && return
    test -e $1 && echo not overwriting $1 && return 1
    untar $c ftp://sourceware.org/pub/gcc/releases/$1/ ftp://ftp.gnu.org/gnu/gcc/$1/
    mv $1 $c
    cd $c

    # Debian sources, etc
    case ${TARGET} in
    ( m68k-* )
        case ${1} in
        ( gcc-2.95.3 )
            decompress ${BTC_PATCHES}/gcc-core-2.95_2.95.4.ds15-27-debian-m68k.diff | patch -p1
            # Reverse unwanted Debian patch
            patch -p1 -R < ${BTC_PATCHES}/gcc-core-295-install-names.patch
            ;;
        ( gcc-3.3.6 )
            decompress ${BTC_PATCHES}/gcc-core-3.3_3.3.6ds1-15-debian-m68k.diff | patch -p1
            # Reverse unwanted Debian patch
            patch -p0 -R < ${BTC_PATCHES}/gcc-core-336-rename-info-files.dpatch
            ;;
        ( gcc-4.1.2 )
            decompress ${BTC_PATCHES}/gcc-core-4.1_4.1.2-25-debian-m68k.diff | patch -p1
            # Build failure
            patch -p0 -R < ${BTC_PATCHES}/multiarch-include.dpatch
            # Etch binutils doesn't do GNU hash
            patch -p0 -R < ${BTC_PATCHES}/gcc-hash-style-both.dpatch
            ;;
        ( gcc-4.3.2 )
            decompress ${BTC_PATCHES}/gcc-core-4.3_4.3.2-1.1-debian-m68k.diff | patch -p1
            # Reverse Debian inline-gnu99 hack
            patch -p0 -R < ${BTC_PATCHES}/m68k-allow-gnu99.dpatch
            # Build failure
            patch -p0 -R < ${BTC_PATCHES}/multiarch-include.dpatch
            ;;
        ( gcc-4.3.5 )
            decompress ${BTC_PATCHES}/gcc-core-4.3_4.3.5-2-debian-m68k.diff | patch -p1
            # Reverse Debian inline-gnu99 hack
            patch -p0 -R < ${BTC_PATCHES}/m68k-allow-gnu99.dpatch
            ;;
        ( gcc-4.4.4 )
            decompress ${BTC_PATCHES}/gcc-core-4.4_4.4.4-8-debian-m68k.diff | patch -p1
            # Reverse Debian libgomp info rename
            patch -p2 -R < ${BTC_PATCHES}/gcc-4.4-rename-libgomp-info-file-debian.diff
            # Bug fixes
            patch -p1 < ${BTC_PATCHES}/gcc-pr39531.patch
            patch -p1 < ${BTC_PATCHES}/gcc-PR41302.patch
            patch -p0 < ${BTC_PATCHES}/gcc-pr43804.diff
            patch -p1 < ${BTC_PATCHES}/gcc-pr37053.patch
            ;;
        ( gcc-4.5.1 )
            patch -p0 < ${BTC_PATCHES}/gcc-pr43804.diff
            ;;
        esac
        ;;
    ( powerpc-* )
        case ${1} in
        ( gcc-2.95.3 )
            decompress ${BTC_PATCHES}/gcc-core-2.95_2.95.4.ds15-27-debian-powerpc.diff | patch -p1
            # Reverse unwanted Debian patch
            patch -p1 -R < ${BTC_PATCHES}/gcc-core-295-install-names.patch
            ;;
        ( gcc-3.3.6 )
            decompress ${BTC_PATCHES}/gcc-core-3.3_3.3.6ds1-15-debian-powerpc.diff | patch -p1
            # Reverse unwanted Debian patch
            patch -p0 -R < ${BTC_PATCHES}/gcc-core-336-rename-info-files.dpatch
            ;;
        ( gcc-4.1.2 )
            decompress ${BTC_PATCHES}/gcc-core-4.1_4.1.2-25-debian-powerpc.diff | patch -p1
            # Build failure
            patch -p0 -R < ${BTC_PATCHES}/multiarch-include.dpatch
            # Etch binutils doesn't do GNU hash
            patch -p0 -R < ${BTC_PATCHES}/gcc-hash-style-both.dpatch
            ;;
        ( gcc-4.3.2 )
            decompress ${BTC_PATCHES}/gcc-core-4.3_4.3.2-1.1-debian-powerpc.diff | patch -p1
            # Reverse Debian inline-gnu99 hack
            patch -p0 -R < ${BTC_PATCHES}/m68k-allow-gnu99.dpatch
            # Build failure
            patch -p0 -R < ${BTC_PATCHES}/multiarch-include.dpatch
            ;;
        ( gcc-4.3.5 )
            decompress ${BTC_PATCHES}/gcc-core-4.3_4.3.5-2-debian-powerpc.diff | patch -p1
            # Reverse Debian inline-gnu99 hack
            patch -p0 -R < ${BTC_PATCHES}/m68k-allow-gnu99.dpatch
            ;;
        ( gcc-4.4.4 )
            decompress ${BTC_PATCHES}/gcc-core-4.4_4.4.4-8-debian-powerpc.diff | patch -p1
            # Reverse Debian libgomp info rename
            patch -p2 -R < ${BTC_PATCHES}/gcc-4.4-rename-libgomp-info-file-debian.diff
            ;;
        esac
        ;;
    ( * )
        case ${1} in
        ( gcc-3.3[.-]* )
            # For binutils > 2.15
            patch -p0 < ${BTC_PATCHES}/gcc-3.3-mips-embedded-pic.patch
            ;;
        esac
        ;;
    esac

    case ${1} in
    ( gcc-2.95.* )
        # Crosstool patches
        patch -p1 < ${BTC_PATCHES}/gcc-pr3106.patch
        patch -p1 < ${BTC_PATCHES}/backport-config.gcc-1.4.patch
        # More autotools fixes
        patch -p1 < ${BTC_PATCHES}/gcc-2.95.2-host-darwin.diff
        # makeinfo crash
        patch -p1 < ${BTC_PATCHES}/gcc-2.95.3-use-host-makeinfo.diff
        # Fix names of cross gcov and cpp
        patch -p1 < ${BTC_PATCHES}/gcc-2.95-AR_FOR_TARGET-RANLIB_FOR_TARGET-fix-target-name.patch
        patch -p1 < ${BTC_PATCHES}/gcc-2.95-CPP_CROSS_NAME.patch
        patch -p1 < ${BTC_PATCHES}/gcc-2.95-btc-GCOV_CROSS_NAME.diff
        ;;
    ( gcc-3.[01][.-]* )
        ;;
    ( gcc-3.* )
        # We build gcc-core before libc is built
        patch -p0 < ${BTC_PATCHES}/gcc-3.2-btc-shlib-sans-libc.patch
        ;;
    ( gcc-4.0[.-]* )
        # We build gcc-core before libc is built
        patch -p1 < ${BTC_PATCHES}/gcc-4-no-libc-yet.diff
        # Bug fix
        #patch -p1 < ${BTC_PATCHES}/gcc-4.0-pr20583.patch
        ;;
    ( gcc-4.[123][.-]* | gcc-4.4.[012] )
        # We build gcc-core before libc is built
        patch -p1 < ${BTC_PATCHES}/gcc-4-no-libc-yet.diff
        ;;
    ( gcc-4.* )
        # We build gcc-core before libc is built
        patch -p1 < ${BTC_PATCHES}/gcc-4.4.3-no-libc-yet.diff
        ;;
    esac

    case ${1} in
    ( gcc-[23].* | gcc-4.0[.-]* )
        # build failure
        patch -p1 < ${BTC_PATCHES}/gcc-3-creat-needs-open3.patch
        ;;
    esac
}

function prep_gcc () {
    cd ${BTC_BUILD}
    test -e $1 && echo $1 already exists && return
    untar $1 ftp://sourceware.org/pub/gcc/releases/$1/ ftp://ftp.gnu.org/gnu/gcc/$1/
    cd $1

    # Debian sources, etc
    case ${TARGET} in
    ( m68k-* )
        case ${1} in
        ( gcc-2.95.3 )
            decompress ${BTC_PATCHES}/gcc-2.95_2.95.4.ds15-27-debian-m68k.diff | patch -p1
            # Reverse unwanted Debian patch
            patch -p1 -R < ${BTC_PATCHES}/gcc-295-install-names.patch
            ;;
        ( gcc-3.3.6 )
            decompress ${BTC_PATCHES}/gcc-3.3_3.3.6ds1-15-debian-m68k.diff | patch -p1
            # Reverse unwanted Debian patch
            patch -p0 -R < ${BTC_PATCHES}/gcc-336-rename-info-files.dpatch
            ;;
        ( gcc-4.1.2 )
            decompress ${BTC_PATCHES}/gcc-4.1_4.1.2-25-debian-m68k.diff | patch -p1
            # Build failure
            patch -p0 -R < ${BTC_PATCHES}/multiarch-include.dpatch
            # Etch binutils doesn't do GNU hash
            patch -p0 -R < ${BTC_PATCHES}/gcc-hash-style-both.dpatch
            ;;
        ( gcc-4.3.2 )
            decompress ${BTC_PATCHES}/gcc-4.3_4.3.2-1.1-debian-m68k.diff | patch -p1
            # Reverse Debian inline-gnu99 hack
            patch -p0 -R < ${BTC_PATCHES}/m68k-allow-gnu99.dpatch
            # Build failure
            patch -p0 -R < ${BTC_PATCHES}/multiarch-include.dpatch
            ;;
        ( gcc-4.3.5 )
            decompress ${BTC_PATCHES}/gcc-4.3_4.3.5-2-debian-m68k.diff | patch -p1
            # Reverse Debian inline-gnu99 hack
            patch -p0 -R < ${BTC_PATCHES}/m68k-allow-gnu99.dpatch
            ;;
        ( gcc-4.4.4 )
            decompress ${BTC_PATCHES}/gcc-4.4_4.4.4-8-debian-m68k.diff | patch -p1
            # Reverse Debian libgomp info rename
            patch -p2 -R < ${BTC_PATCHES}/gcc-4.4-rename-libgomp-info-file-debian.diff
            # Bug fixes
            patch -p1 < ${BTC_PATCHES}/gcc-pr39531.patch
            patch -p1 < ${BTC_PATCHES}/gcc-PR41302.patch
            patch -p0 < ${BTC_PATCHES}/gcc-pr43804.diff
            patch -p1 < ${BTC_PATCHES}/gcc-pr37053.patch
            ;;
        ( gcc-4.5.1 )
            patch -p0 < ${BTC_PATCHES}/gcc-pr43804.diff
            ;;
        ( gcc-4.5-* )
            patch -p1 < ${BTC_PATCHES}/gcc-pr45638.diff
            ;;
        esac
        ;;
    ( powerpc-* )
        case ${1} in
        ( gcc-2.95.3 )
            decompress ${BTC_PATCHES}/gcc-2.95_2.95.4.ds15-27-debian-powerpc.diff | patch -p1
            # Reverse unwanted Debian patch
            patch -p1 -R < ${BTC_PATCHES}/gcc-295-install-names.patch
            ;;
        ( gcc-3.3.6 )
            decompress ${BTC_PATCHES}/gcc-3.3_3.3.6ds1-15-debian-powerpc.diff | patch -p1
            # Reverse unwanted Debian patch
            patch -p0 -R < ${BTC_PATCHES}/gcc-336-rename-info-files.dpatch
            ;;
        ( gcc-4.1.2 )
            decompress ${BTC_PATCHES}/gcc-4.1_4.1.2-25-debian-powerpc.diff | patch -p1
            # Build failure
            patch -p0 -R < ${BTC_PATCHES}/multiarch-include.dpatch
            # Etch binutils doesn't do GNU hash
            patch -p0 -R < ${BTC_PATCHES}/gcc-hash-style-both.dpatch
            ;;
        ( gcc-4.3.2 )
            decompress ${BTC_PATCHES}/gcc-4.3_4.3.2-1.1-debian-powerpc.diff | patch -p1
            # Reverse Debian inline-gnu99 hack
            patch -p0 -R < ${BTC_PATCHES}/m68k-allow-gnu99.dpatch
            # Build failure
            patch -p0 -R < ${BTC_PATCHES}/multiarch-include.dpatch
            ;;
        ( gcc-4.3.5 )
            decompress ${BTC_PATCHES}/gcc-4.3_4.3.5-2-debian-powerpc.diff | patch -p1
            # Reverse Debian inline-gnu99 hack
            patch -p0 -R < ${BTC_PATCHES}/m68k-allow-gnu99.dpatch
            ;;
        ( gcc-4.4.4 )
            decompress ${BTC_PATCHES}/gcc-4.4_4.4.4-8-debian-powerpc.diff | patch -p1
            # Reverse Debian libgomp info rename
            patch -p2 -R < ${BTC_PATCHES}/gcc-4.4-rename-libgomp-info-file-debian.diff
            ;;
        esac
        ;;
    ( * )
        case ${1} in
        ( gcc-3.3[.-]* )
            # For binutils > 2.15
            patch -p0 < ${BTC_PATCHES}/gcc-3.3-mips-embedded-pic.patch
            ;;
        esac
        ;;
    esac

    case ${1} in
    ( gcc-2.95.* )
        # Crosstool patches
        patch -p1 < ${BTC_PATCHES}/gcc-pr3106.patch
        patch -p1 < ${BTC_PATCHES}/backport-config.gcc-1.4.patch
        # More autotools fixes
        patch -p1 < ${BTC_PATCHES}/gcc-2.95.2-host-darwin.diff
        # makeinfo crash
        patch -p1 < ${BTC_PATCHES}/gcc-2.95.3-use-host-makeinfo.diff
        # Fix names of cross gcov and cpp
        patch -p1 < ${BTC_PATCHES}/gcc-2.95-AR_FOR_TARGET-RANLIB_FOR_TARGET-fix-target-name.patch
        patch -p1 < ${BTC_PATCHES}/gcc-2.95-CPP_CROSS_NAME.patch
        patch -p1 < ${BTC_PATCHES}/gcc-2.95-btc-GCOV_CROSS_NAME.diff
        # f77 build failure
        patch -p1 < ${BTC_PATCHES}/gcc-pr26709.diff
        ;;
    ( gcc-3.3[.-]* )
        patch -p1 < ${BTC_PATCHES}/gcc-3.3.4-zecke-xgcc-cpp.patch
        # f77 build failure
        patch -p1 < ${BTC_PATCHES}/gcc-pr26709.diff
        ;;
    ( gcc-3.4[.-]* )
        patch -p1 < ${BTC_PATCHES}/gcc-3.4.1-btc-use-target-cpp-for-lib-configure.patch
        #patch -p1 < ${BTC_PATCHES}/gcc-3.4.4-zecke-xgcc-cpp.patch
        ;;
    ( gcc-4.0[.-]* )
        patch -p1 < ${BTC_PATCHES}/gcc-4.0.2-zecke-xgcc-cpp.patch
        ;;
    ( gcc-4.[123][.-]* )
        patch -p1 < ${BTC_PATCHES}/gcc-4.1.1-zecke-xgcc-cpp.patch
        ;;
    ( gcc-4.* )
        patch -p1 < ${BTC_PATCHES}/gcc-4.4.1-btc-use-target-cpp-for-lib-configure.patch
        ;;
    esac

    case ${1} in
    ( gcc-[23].* | gcc-4.0[.-]* )
        # build failure
        patch -p1 < ${BTC_PATCHES}/gcc-3-creat-needs-open3.patch
        ;;
    esac
}

function install_gcc_core_static () {
    cd ${BTC_BUILD}
    test -e $1 && echo $1 already exists && return
    mkdir $1
    cd $1

    local ldflags
    ldflags=
    if [ ${BUILD} = ${BUILD%-apple-darwin*} ] ; then
        ldflags="-Wl,-rpath,${HOST_TOOLS_PREFIX}/lib"
    fi

    CFLAGS="-O2 $HOST_CFLAGS" LDFLAGS="$ldflags" \
    ../${GCC_DIST/gcc/gcc-core}/configure \
    --prefix=${TC_PREFIX} --target=${TARGET} \
    ${GCC_CONFIG_OPTS} \
    --with-newlib \
    --disable-multilib \
    --disable-nls \
    --enable-threads=posix \
    --enable-languages=c \
    --disable-lto \
    --disable-shared \
    --disable-libgomp \
    --disable-libmudflap \
    --disable-libssp \
    --disable-libstdcxx-pch \
    --disable-decimal-float
#    --disable-libunwind-exceptions

    make ${MAKE_OPTS} all-gcc
    make install-gcc 
    case ${GCC_DIST} in
    ( gcc-[23].* | gcc-4.[012][.-]* )
        ;;
    ( * )
        make all-target-libgcc
        make install-target-libgcc 
        ;;
    esac

    manifest install_gcc_core_static
}

function install_gcc_core_shared () {
    cd ${BTC_BUILD}
    test -e $1 && echo $1 already exists && return
    mkdir $1
    cd $1

    local ldflags
    ldflags=
    if [ ${BUILD} = ${BUILD%-apple-darwin*} ] ; then
        ldflags="-Wl,-rpath,${HOST_TOOLS_PREFIX}/lib"
    fi

    CFLAGS="-O2 $HOST_CFLAGS" LDFLAGS="$ldflags" \
    ../${GCC_DIST/gcc/gcc-core}/configure \
    --prefix=${TC_PREFIX} --target=${TARGET} \
    ${GCC_CONFIG_OPTS} \
    --with-newlib \
    --disable-multilib \
    --disable-nls \
    --enable-threads=posix \
    --enable-languages=c \
    --disable-lto \
    --enable-shared \
    --disable-libgomp \
    --disable-libmudflap \
    --disable-libssp \
    --disable-libstdcxx-pch \
    --disable-decimal-float

    mkdir -p gcc
    cp ../glibc-${TARGET}-2/csu/crt[1in].o gcc
    make ${MAKE_OPTS} all-gcc
    make install-gcc 
    case ${GCC_DIST} in
    ( gcc-[23].* | gcc-4.[012][.-]* )
        ;;
    ( * )
        make all-target-libgcc
        make install-target-libgcc 
        ;;
    esac

    manifest install_gcc_core_shared
}

function install_gcc () {
    cd ${BTC_BUILD}
    test -e $1 && echo $1 already exists && return
    mkdir $1
    cd $1

    fortran=fortran
    case ${GCC_DIST} in
    ( gcc-[23].* )
        fortran=f77 ;;
    esac

    local ldflags
    ldflags=
    if [ ${BUILD} = ${BUILD%-apple-darwin*} ] ; then
        ldflags="-Wl,-rpath,${HOST_TOOLS_PREFIX}/lib"
    fi

    CFLAGS="-O2 $HOST_CFLAGS" LDFLAGS="$ldflags" \
    ../${GCC_DIST}/configure \
    --prefix=${TC_PREFIX} --target=${TARGET} \
    ${GCC_CONFIG_OPTS} \
    --enable-threads=posix \
    --enable-languages=c,c++,$fortran \
    --enable-multilib \
    --enable-lto \
    --enable-symvers=gnu \
    --enable-__cxa_atexit \
    --enable-shared \
    --enable-clocale=gnu

    make all
    make install

    rm -f ${TC_PREFIX}/lib/libiberty.a

    manifest install_gcc
    copy_license ${GCC_DIST}
}
