##############################################
# Functions relating to gcc

function prep_gcc_core () {
    cd ${BTC_BUILD}
    local c
    c=${1/gcc/gcc-core}
    if [ -e ${c} ]; then
        echo ${c} already exists
        return 0
    fi
    if [ -e ${1} ]; then
        echo not overwriting ${1}
        return 1
    fi
    untar ${c} || untar ${1} || return 1
    mv ${1} ${c}
    cd ${c}

    # Debian sources
    case ${1} in
    ( gcc-2.95.3 )
        decompress ${BTC_PATCHES}/gcc-2.95.4.ds15-27.diff | patch -p1
        ;;
    ( gcc-3.3.6 )
        decompress ${BTC_PATCHES}/gcc-core-3.3.6ds1-15.diff | patch -p1
        ;;
    ( gcc-4.1.1 )
        decompress ${BTC_PATCHES}/gcc-core-4.1.1ds2-21.diff | patch -p1
        ;;
    ( gcc-4.2.0 )
        decompress ${BTC_PATCHES}/gcc-core-4.2.0-gentoo-p1.4.diff | patch -p1
        ;;
    esac

    case ${1} in
    ( gcc-2.95.* )
        # Crosstool patches
        patch -p1 < ${BTC_PATCHES}/gcc-pr3106.patch
        patch -p1 < ${BTC_PATCHES}/backport-config.gcc-1.4.patch
        # More autotools fixes
        patch -p1 < ${BTC_PATCHES}/gcc-2.95.2-host-darwin.diff
        ;;
    ( gcc-3.[01][-.]* )
        ;;
    ( gcc-3.* )
        # We build gcc-core before libc is built
        patch -p0 < ${BTC_PATCHES}/gcc-3.2-btc-shlib-sans-libc.patch
        ;;
    ( gcc-4.0[-.]* )
        # We build gcc-core before libc is built
        patch -p1 < ${BTC_PATCHES}/gcc-4-no-libc-yet.diff
        ;;
    ( gcc-4.* )
        # We build gcc-core before libc is built
        patch -p1 < ${BTC_PATCHES}/gcc-4-no-libc-yet.diff
        ;;
    esac
}

function prep_gcc () {
    cd ${BTC_BUILD}
    if [ -e ${1} ]; then
        echo ${1} already exists
        return 0
    fi
    untar ${1}
    cd ${1}

    # Debian sources
    case ${1} in
    ( gcc-2.95.3 )
        decompress ${BTC_PATCHES}/gcc-2.95.4.ds15-27.diff | patch -p1
        ;;
    ( gcc-3.3.6 )
        decompress ${BTC_PATCHES}/gcc-3.3.6ds1-15.diff | patch -p1
        ;;
    ( gcc-4.1.1 )
        decompress ${BTC_PATCHES}/gcc-4.1.1ds2-21.diff | patch -p1
        ;;
    ( gcc-4.2.0 )
        decompress ${BTC_PATCHES}/gcc-4.2.0-gentoo-p1.4.diff | patch -p1
        ;;
    esac

    case ${1} in
    ( gcc-2.95.3 )
        # Crosstool patches
        patch -p1 < ${BTC_PATCHES}/gcc-pr3106.patch
        patch -p1 < ${BTC_PATCHES}/backport-config.gcc-1.4.patch
        # More autotools fixes
        patch -p1 < ${BTC_PATCHES}/gcc-2.95.2-host-darwin.diff
        ;;
    ( gcc-3.3[-.]* )
        patch -p0 < ${BTC_PATCHES}/gcc-3.3-no-include-filio.patch
        ;;
    ( gcc-3.4[-.]* )
        patch -p0 < ${BTC_PATCHES}/gcc-3.4-btc-no-include-filio.patch
        patch -p1 < ${BTC_PATCHES}/gcc-3.4.1-btc-use-target-cpp-for-lib-configure.patch
        ;;
    ( gcc-4.0[-.]* )
        patch -p0 < ${BTC_PATCHES}/gcc-3.4-btc-no-include-filio.patch
        ;;
    ( gcc-4.[123][-.]* )
        patch -p0 < ${BTC_PATCHES}/gcc-3.4-btc-no-include-filio.patch
        # Bug fix
        #patch -p0 < ${BTC_PATCHES}/gcc-4-pr29826.patch
        ;;
    esac
}

function install_gcc_core_static () {
    cd ${BTC_BUILD}
    if [ -e ${1} ]; then
        echo ${1} already exists
        return 0
    fi
    mkdir ${1}
    cd ${1}

    CFLAGS="-O2 $HOST_CFLAGS" \
../${GCC_DIST/gcc/gcc-core}/configure \
--prefix=${TC_PREFIX} --target=${TARGET} \
${GCC_CONFIG_OPTS} \
--with-newlib \
--disable-multilib \
--disable-nls \
--enable-threads=posix \
--enable-symvers=gnu \
--enable-__cxa_atexit \
--enable-languages=c \
--disable-shared \
--disable-libmudflap --disable-libssp --disable-libunwind-exceptions
    make -j2 all-gcc
    make install-gcc 
    case ${GCC_DIST} in
    ( gcc-4.3[.-]* )
        make all-target-libgcc
        make install-target-libgcc 
        ;;
    esac

    manifest install_gcc_core_static
}

function install_gcc_core_shared () {
    cd ${BTC_BUILD}
    if [ -e ${1} ]; then
        echo ${1} already exists
        return 0
    fi
    mkdir ${1}
    cd ${1}

    CFLAGS="-O2 $HOST_CFLAGS" \
../${GCC_DIST/gcc/gcc-core}/configure \
--prefix=${TC_PREFIX} --target=${TARGET} \
${GCC_CONFIG_OPTS} \
--with-newlib \
--disable-multilib \
--disable-nls \
--enable-threads=posix \
--enable-symvers=gnu \
--enable-__cxa_atexit \
--enable-languages=c \
--enable-shared
    mkdir -p gcc
    cp ../glibc-${TARGET}-2/csu/crt[in].o gcc
    make -j2 all-gcc
    make install-gcc 
    case ${GCC_DIST} in
    ( gcc-4.3[.-]* )
        make all-target-libgcc
        make install-target-libgcc 
        ;;
    esac

    manifest install_gcc_core_shared
}

function install_gcc () {
    cd ${BTC_BUILD}
    if [ -e ${1} ]; then
        echo ${1} already exists
        return 0
    fi
    mkdir ${1}
    cd ${1}

    CFLAGS="-O2 $HOST_CFLAGS" \
../${GCC_DIST}/configure \
--prefix=${TC_PREFIX} --target=${TARGET} \
${GCC_CONFIG_OPTS} \
--enable-threads=posix \
--enable-__cxa_atexit \
--enable-languages=c,c++ \
--enable-shared \
--enable-c99 \
--enable-long-long
#--enable-languages=ada,c,c++,f77,java,objc,pascal
    make all
    make install

    manifest install_gcc
}
