##############################################
# Functions relating to linux

function prep_kernel () {
    cd ${BTC_BUILD}
    test -e $1 && echo $1 already exists && return
    untar $1 ftp://ftp.kernel.org/pub/linux/kernel/v2.{6,4,2}
    cd $1

    case ${1} in
    ( linux-2.2.26 )
        patch -p0 < ${BTC_PATCHES}/linux-2.2.25-btc-Makefile.patch
        case ${TARGET_CPU} in
        ( m68k )
            # Linux-mac68k CVS snapshot
            decompress ${BTC_PATCHES}/linux-2.2.27-rc2-mac68k-20050408.diff | patch -p1 ;;
        esac
        ;;
    ( linux-2.4.* )
        patch -p1 < ${BTC_PATCHES}/linux-2.4-btc-Makefile.patch
        case ${TARGET_CPU} in
        ( m68k )
            # Linux-m68k CVS snapshot
            decompress ${BTC_PATCHES}/linux-2.4.35-m68k.diff | patch -p1
            # Avoid traditional CPP for gcc-3.3
            patch -p1 < ${BTC_PATCHES}/linux-2.4.28-m68k-use-standard-cpp.diff
            ;;
        ( i386 )
            patch -p1 < ${BTC_PATCHES}/linux-2.4-btc-darwin-bzImage-build.patch
            ;;
        esac
        ;;
    ( linux-2.6.* )
        if [ ${BUILD} != ${BUILD/%-apple-darwin*} ] ; then
            case ${1} in
            ( linux-2.6.[0-8] | linux-2.6.[0-8][.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6-btc-darwin-config.patch
                ;;
            ( linux-2.6.9 | linux-2.6.9[.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.9-btc-darwin-config.patch
                ;;
            esac
            case ${1} in
            ( linux-2.6.[0-3] | linux-2.6.[0-3]-* )
                # This patch hasn't been tested on these old versions
                patch -p1 < ${BTC_PATCHES}/linux-2.6.4-btc-darwin-kbuild.patch
                ;;
            ( linux-2.6.4 | linux-2.6.4-* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.4-btc-darwin-kbuild.patch
                ;;
            ( linux-2.6.[56] | linux-2.6.[56]-* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.5-btc-darwin-kbuild.patch
                ;;
            ( linux-2.6.7 | linux-2.6.7-* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.7-btc-darwin-kbuild.patch
                ;;
            ( linux-2.6.[89] | linux-2.6.[89][.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.8-btc-darwin-kbuild.patch
                ;;
            ( linux-2.6.1[0-4] | linux-2.6.1[0-4][.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.14-btc-kconfig.diff
                ;;
            esac

            case ${1} in
            ( linux-2.6.1[0-3] | linux-2.6.1[0-3][.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.10-btc-darwin.diff
                ;;
            ( linux-2.6.1[4-6] | linux-2.6.1[4-6][.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.16-btc-darwin.diff
                ;;
            ( linux-2.6.17 | linux-2.6.17[.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.17-btc-darwin.diff
                ;;
            ( linux-2.6.1[8-9] | linux-2.6.1[8-9][.-]* | \
              linux-2.6.2[0-2] | linux-2.6.2[0-2][.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.18-btc-darwin.diff
                ;;
            ( linux-2.6.2[3-4] | linux-2.6.2[3-4][.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.24-btc-darwin.diff
                patch -p0 < ${BTC_PATCHES}/linux-2.6.26-btc-no-findutils.diff
                ;;
            ( linux-2.6.2[5-9] | linux-2.6.2[5-9][.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.25-btc-darwin.diff
                patch -p0 < ${BTC_PATCHES}/linux-2.6.26-btc-no-findutils.diff
                ;;
            ( * )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.30-btc-darwin.diff
                patch -p0 < ${BTC_PATCHES}/linux-2.6.26-btc-no-findutils.diff
                ;;
            esac
            case ${1} in
            ( linux-2.6.[0-9] | linux-2.6.[0-9][.-]* | \
              linux-2.6.1[01] | linux-2.6.1[01][.-]* )
                ;;
            ( * )
                sed -i -e 's,^#define LOCALEDIR .*,#define LOCALEDIR "'${HOST_TOOLS_PREFIX}'/share/locale",' scripts/kconfig/lkc.h
                ;;
            esac
        fi
        case ${1} in
        ( linux-2.6.[0-7] | linux-2.6.[0-7][.-]* )
            patch -p1 < ${BTC_PATCHES}/linux-2.6-btc-Makefile.patch
            ;;
        ( linux-2.6.[8-9] | linux-2.6.[8-9][.-]* | \
          linux-2.6.10 | linux-2.6.10[.-]* )
            patch -p1 < ${BTC_PATCHES}/linux-2.6-btc-Makefile.patch
            patch -p1 < ${BTC_PATCHES}/linux-2.6-kbuild.diff
            ;;
        ( linux-2.6.1[1-3] | linux-2.6.1[1-3][.-]* )
            patch -p1 < ${BTC_PATCHES}/linux-2.6.12-depmod.pl-instead.diff
            patch -p1 < ${BTC_PATCHES}/linux-2.6-kbuild.diff
            ;;
        ( linux-2.6.1[4-6] | linux-2.6.1[4-6][.-]* )
            patch -p1 < ${BTC_PATCHES}/linux-2.6.16-depmod.pl-instead.diff
            patch -p1 < ${BTC_PATCHES}/linux-2.6-kbuild.diff
            ;;
        ( linux-2.6.1[7-9] | linux-2.6.1[7-9][.-]* | \
          linux-2.6.2[0-1] | linux-2.6.2[0-1][.-]* )
            patch -p1 < ${BTC_PATCHES}/linux-2.6.17-depmod.pl-instead.diff
            patch -p1 < ${BTC_PATCHES}/linux-2.6-kbuild.diff
            ;;
        ( linux-2.6.22 | linux-2.6.22[.-]* )
            patch -p1 < ${BTC_PATCHES}/linux-2.6.17-depmod.pl-instead.diff
            ;;
        ( linux-2.6.2[3-8] | linux-2.6.2[3-8][.-]* )
            patch -p1 < ${BTC_PATCHES}/linux-2.6.24-depmod.pl-instead.diff
            ;;
        ( * )
            patch -p1 < ${BTC_PATCHES}/linux-2.6.29-depmod.pl-instead.diff
            ;;
        esac

        case ${TARGET_CPU} in
        ( powerpc )
            case ${1} in
            ( linux-2.6.[0-9] | linux-2.6.[0-9][.-]* | \
              linux-2.6.1[0-5] | linux-2.6.1[0-5][.-]* )
                ;;
            ( linux-2.6.1[6-9] | linux-2.6.1[6-9][.-]* | \
              linux-2.6.2[0-3] | linux-2.6.2[0-3][.-]* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.16-use_pmac32_defconfig.diff
                ;;
            ( linux-2.6.27 ) # probably other versions too
                patch -p1 < ${BTC_PATCHES}/linux-2.6.27-use_pmac32_defconfig.diff
                patch -p1 < ${BTC_PATCHES}/linux-2.6.27-powerpc-mktree-portability.diff
                ;;
            ( linux-2.6.* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.27-use_pmac32_defconfig.diff
                ;;
            esac
            ;;
        ( mips )
            case ${1} in
            ( linux-2.6.20 | linux-2.6.20-* )
                decompress ${BTC_PATCHES}/linux-2.6.20-mips-20070205.diff | patch -p1
                ;;
            esac
            ;;
        ( m68k )
            case ${1} in
            ( linux-2.6.18 | linux-2.6.18-* )
                decompress ${BTC_PATCHES}/linux-2.6.18-m68k-20061204.diff | patch -p1
                ;;
            ( linux-2.6.19 | linux-2.6.19-* )
                decompress ${BTC_PATCHES}/linux-2.6.19-m68k-20061226.diff | patch -p1
                ;;
            ( linux-2.6.20 | linux-2.6.20-* )
                decompress ${BTC_PATCHES}/linux-2.6.20-m68k-20070303.diff | patch -p1
                ;;
            ( linux-2.6.22 | linux-2.6.22-* )
                decompress ${BTC_PATCHES}/linux-2.6.22-m68k-20070827.diff | patch -p1
                ;;
            ( linux-2.6.24 | linux-2.6.24-* )
                decompress ${BTC_PATCHES}/linux-2.6.24-m68k-20080212.diff | patch -p1
                ;;
            ( linux-2.6.29 | linux-2.6.29-* )
                decompress ${BTC_PATCHES}/linux-2.6.29-m68k-20090520.diff | patch -p1
                ;;
            ( linux-2.6.31 | linux-2.6.31-* )
                patch -p1 < ${BTC_PATCHES}/linux-m68k-kuvyrkov-1-nptl-support.patch
                patch -p1 < ${BTC_PATCHES}/linux-m68k-kuvyrkov-2-siginfo-layout.patch
                ;;
            esac
            case ${1} in
            ( linux-2.6.1[89] | linux-2.6.1[89]-* | \
              linux-2.6.2[02] | linux-2.6.2[02]-* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.17-m68k-20060622-Os-strcpy.diff
                ;;
            ( linux-2.6.2[34] | linux-2.6.2[34]-* )
                patch -p1 < ${BTC_PATCHES}/linux-2.6.23-Os-strcpy.diff
                ;;
            esac
            patch -p1 < ${BTC_PATCHES}/linux-2.6.15-viro-m68k-math-emu-macro-names.diff
            patch -p1 < ${BTC_PATCHES}/linux-2.6.15-viro-m68k-math-emu-macro-args.diff
            ;;
        esac
        ;;
    esac
}

function install_kernel_headers () {
    test -d $KERNEL_HEADERS/linux && echo kernel headers already present && return
    cd $BTC_BUILD/$1

    make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- mrproper
    case ${1} in
    ( linux-2.[24].* )
        yes "" | make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- config || true
        make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- symlinks include/linux/version.h
        ;;
    ( linux-2.6.* )
        make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- defconfig
        make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- include/asm include/linux/version.h
        ;;
    esac
    cp -r include/linux ${KERNEL_HEADERS}
    cp -r include/asm-generic ${KERNEL_HEADERS}
    if test -d arch/${TARGET_CPU}/include/asm ; then
      cp -r arch/${TARGET_CPU}/include/asm ${KERNEL_HEADERS}/asm
    else
      cp -r include/asm-${TARGET_CPU} ${KERNEL_HEADERS}/asm
    fi
    ln -fs ${KERNEL_HEADERS}/* ${GLIBC_HEADERS}

    manifest install_kernel_headers
}

function build_kernel () {
    test -e $BTC_BUILD/$1/.compiled && echo kernel already compiled && return
    pushd $BTC_BUILD/$1 >/dev/null

    local config
    config=${BTC_CONFIGS}/${DOTCONFIG:-${1}-${TARGET_CPU}-dot-config}
    if [ -f $config ] ; then
        make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- clean
        cp ${config} .config
    else
        make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- defconfig || true
    fi
    (yes "" || true) | make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- CONFIG_SHELL=/bin/bash oldconfig

    case ${1} in
    ( linux-2.[24].* )
        make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- dep
        make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- vmlinux
        make ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- modules
        ;;
    ( linux-2.6.* )
        ## this hack is for non-ELF platforms, like Darwin
        #case ${1} in
        #    ( linux-2.6.[0-7] | linux-2.6.[0-7]-* ) out=scripts/elf.h ;;
        #    ( * )                                   out=scripts/mod/elf.h ;;
        #esac
        #sed 's/^#include <features.h>$//' < ${GLIBC_HEADERS}/elf.h > $out
        make ${MAKE_OPTS} ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}-
        ;;
    esac
    touch .compiled
    popd >/dev/null
}

function package_kernel () {
    KERNEL_IMAGE=${BTC_BUILD}/${1}-${TARGET_CPU}-image
    test -e $KERNEL_IMAGE.tar.gz && echo kernel tarball already present && return

    rm -fr ${KERNEL_IMAGE}
    mkdir -p ${KERNEL_IMAGE}/boot
    pushd ${BTC_BUILD}/${1} >/dev/null
    make INSTALL_MOD_PATH=${KERNEL_IMAGE} ARCH=${TARGET_CPU} CROSS_COMPILE=${TARGET}- modules_install
    cd ${KERNEL_IMAGE}/lib/modules
    ver=`ls -d [0-9]*`
    if [ x${ver} = x ]; then
        exit
    fi
    cd ${BTC_BUILD}/${1}
    case ${TARGET_CPU} in
    ( alpha )
        if [ -e arch/${TARGET_CPU}/boot/vmlinux.gz ]; then
            cp arch/${TARGET_CPU}/boot/vmlinux.gz \
               ${KERNEL_IMAGE}/boot/vmlinux-${ver}.gz
        else
            gzip -c vmlinux > ${KERNEL_IMAGE}/boot/vmlinux-${ver}.gz
        fi
        ;;
    ( ppc | powerpc )
        cp vmlinux ${KERNEL_IMAGE}/boot/vmlinux-${ver}
        ;;
    ( * )
        if [ -e arch/${TARGET_CPU}/boot/bzImage ]; then
            cp arch/${TARGET_CPU}/boot/bzImage ${KERNEL_IMAGE}/boot/bzImage-${ver}
        else
            cp vmlinux ${KERNEL_IMAGE}/boot/vmlinux-${ver}
        fi
        ;;
    esac
    cp System.map ${KERNEL_IMAGE}/boot/System.map-${ver}
    cp .config ${KERNEL_IMAGE}/boot/config-${ver}
    cd ${KERNEL_IMAGE}/boot
    sudo ln -s System.map-${ver} System.map
    cd ${KERNEL_IMAGE}
    rm -f lib/modules/${ver}/{build,source}
    chmod -R g-w,o-w ${KERNEL_IMAGE}
    sudo chown -R 0:0 ${KERNEL_IMAGE}
    tar -czf ${BTC_BUILD}/${1}-${TARGET_CPU}-image.tar.gz .
    sudo rm -r ${KERNEL_IMAGE}
    popd >/dev/null
}
