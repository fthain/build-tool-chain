From facfa03765858dba1461f29b42e613ae2550d2db Mon Sep 17 00:00:00 2001
From: Maxim Kuvyrkov <maxim@codesourcery.com>
Date: Sun, 23 Aug 2009 22:46:55 +0400
Subject: [PATCH] 	Allow ports to define the version of the libgcc_s.so library.

	* shlib-versions: Add line for libgcc_s, set version to 1.
	* sysdeps/generic/framestate.c: Include gnu/lib-names.h,
	use LIBGCC_S_SO instead of hardcoded string.
	* nptl/sysdeps/pthread/unwind-resume.c: Same.
	* nptl/sysdeps/pthread/unwind-forceunwind.c: Same.

Signed-off-by: Maxim Kuvyrkov <maxim@codesourcery.com>
---
 nptl/sysdeps/pthread/unwind-forcedunwind.c |    5 +++--
 nptl/sysdeps/pthread/unwind-resume.c       |    5 +++--
 shlib-versions                             |    5 +++++
 sysdeps/generic/framestate.c               |    3 ++-
 5 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/nptl/sysdeps/pthread/unwind-forcedunwind.c b/nptl/sysdeps/pthread/unwind-forcedunwind.c
index 402591f..142ca74 100644
--- a/nptl/sysdeps/pthread/unwind-forcedunwind.c
+++ b/nptl/sysdeps/pthread/unwind-forcedunwind.c
@@ -22,6 +22,7 @@
 #include <unwind.h>
 #include <pthreadP.h>
 #include <sysdep.h>
+#include <gnu/lib-names.h>
 
 static void *libgcc_s_handle;
 static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);
@@ -49,7 +50,7 @@ pthread_cancel_init (void)
       return;
     }
 
-  handle = __libc_dlopen ("libgcc_s.so.1");
+  handle = __libc_dlopen (LIBGCC_S_SO);
 
   if (handle == NULL
       || (resume = __libc_dlsym (handle, "_Unwind_Resume")) == NULL
@@ -61,7 +62,7 @@ pthread_cancel_init (void)
       || ARCH_CANCEL_INIT (handle)
 #endif
       )
-    __libc_fatal ("libgcc_s.so.1 must be installed for pthread_cancel to work\n");
+    __libc_fatal (LIBGCC_S_SO " must be installed for pthread_cancel to work\n");
 
   PTR_MANGLE (resume);
   libgcc_s_resume = resume;
diff --git a/nptl/sysdeps/pthread/unwind-resume.c b/nptl/sysdeps/pthread/unwind-resume.c
index 088f4c6..f06a479 100644
--- a/nptl/sysdeps/pthread/unwind-resume.c
+++ b/nptl/sysdeps/pthread/unwind-resume.c
@@ -20,6 +20,7 @@
 #include <dlfcn.h>
 #include <stdio.h>
 #include <unwind.h>
+#include <gnu/lib-names.h>
 
 static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);
 static _Unwind_Reason_Code (*libgcc_s_personality)
@@ -32,12 +33,12 @@ init (void)
   void *resume, *personality;
   void *handle;
 
-  handle = __libc_dlopen ("libgcc_s.so.1");
+  handle = __libc_dlopen (LIBGCC_S_SO);
 
   if (handle == NULL
       || (resume = __libc_dlsym (handle, "_Unwind_Resume")) == NULL
       || (personality = __libc_dlsym (handle, "__gcc_personality_v0")) == NULL)
-    __libc_fatal ("libgcc_s.so.1 must be installed for pthread_cancel to work\n");
+    __libc_fatal (LIBGCC_S_SO " must be installed for pthread_cancel to work\n");
 
   libgcc_s_resume = resume;
   libgcc_s_personality = personality;
diff --git a/shlib-versions b/shlib-versions
index 65e772b..6873018 100644
--- a/shlib-versions
+++ b/shlib-versions
@@ -134,3 +134,8 @@ sparc64.*-.*-.*		libBrokenLocale=1	GLIBC_2.2
 
 # The asynchronous name lookup library.
 .*-.*-.*		libanl=1
+
+# The GCC support library.
+# We don't really provide this one as the part of GLIBC,
+# but we declare it here to produce LIBGCC_S_SO macro in gnu/lib-names.h.
+.*-.*-.*                libgcc_s=1
diff --git a/sysdeps/generic/framestate.c b/sysdeps/generic/framestate.c
index a912a8c..15f31a1 100644
--- a/sysdeps/generic/framestate.c
+++ b/sysdeps/generic/framestate.c
@@ -20,6 +20,7 @@
 
 #include <dlfcn.h>
 #include <stdlib.h>
+#include <gnu/lib-names.h>
 #define STATIC static
 #define __frame_state_for fallback_frame_state_for
 #include <unwind-dw2.c>
@@ -36,7 +37,7 @@ __frame_state_for (void *pc, struct frame_state *frame_state)
 
   if (frame_state_for == NULL)
     {
-      void *handle = __libc_dlopen ("libgcc_s.so.1");
+      void *handle = __libc_dlopen (LIBGCC_S_SO);
 
       if (handle == NULL
 	  || (frame_state_for
-- 
1.6.4

