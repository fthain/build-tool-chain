diff -pruN binutils-2.19.51.orig/bfd/doc/bfd.texinfo binutils-2.19.51/bfd/doc/bfd.texinfo
--- binutils-2.19.51.orig/bfd/doc/bfd.texinfo	2009-09-02 17:18:38.000000000 +1000
+++ binutils-2.19.51/bfd/doc/bfd.texinfo	2009-09-08 17:51:26.000000000 +1000
@@ -6,13 +6,12 @@
 @c 
 @synindex fn cp
 
-@ifinfo
-@format
-START-INFO-DIR-ENTRY
+@ifnottex
+@dircategory Software development
+@direntry
 * Bfd: (bfd).                   The Binary File Descriptor library.
-END-INFO-DIR-ENTRY
-@end format
-@end ifinfo
+@end direntry
+@end ifnottex
 
 @copying
 This file documents the BFD library.
diff -pruN binutils-2.19.51.orig/bfd/elfcode.h binutils-2.19.51/bfd/elfcode.h
--- binutils-2.19.51.orig/bfd/elfcode.h	2009-07-23 23:00:20.000000000 +1000
+++ binutils-2.19.51/bfd/elfcode.h	2009-09-08 17:51:26.000000000 +1000
@@ -1123,6 +1123,24 @@ elf_checksum_contents (bfd *abfd,
 
       if (i_shdr.contents)
 	(*process) (i_shdr.contents, i_shdr.sh_size, arg);
+      else
+	{
+	  asection *sec;
+
+	  sec = bfd_section_from_elf_index (abfd, count);
+	  if (sec != NULL)
+	    {
+	      if (sec->contents == NULL)
+		{
+		  /* Force rereading from file.  */
+		  sec->flags &= ~SEC_IN_MEMORY;
+		  if (! bfd_malloc_and_get_section (abfd, sec, & sec->contents))
+		    continue;
+		}
+	      if (sec->contents != NULL)
+		(*process) (sec->contents, i_shdr.sh_size, arg);
+	    }
+	}
     }
 
   return TRUE;
diff -pruN binutils-2.19.51.orig/bfd/opncls.c binutils-2.19.51/bfd/opncls.c
--- binutils-2.19.51.orig/bfd/opncls.c	2009-09-02 17:18:37.000000000 +1000
+++ binutils-2.19.51/bfd/opncls.c	2009-09-08 17:51:26.000000000 +1000
@@ -183,6 +183,13 @@ bfd_fopen (const char *filename, const c
 {
   bfd *nbfd;
   const bfd_target *target_vec;
+  struct stat s;
+
+  if (stat (filename, &s) == 0)
+    if (S_ISDIR(s.st_mode)) {
+      bfd_set_error (bfd_error_file_not_recognized);
+      return NULL;
+    }
 
   nbfd = _bfd_new_bfd ();
   if (nbfd == NULL)
diff -pruN binutils-2.19.51.orig/bfd/section.c binutils-2.19.51/bfd/section.c
--- binutils-2.19.51.orig/bfd/section.c	2009-08-07 03:38:00.000000000 +1000
+++ binutils-2.19.51/bfd/section.c	2009-09-08 17:51:26.000000000 +1000
@@ -1495,7 +1495,7 @@ bfd_malloc_and_get_section (bfd *abfd, s
   if (sz == 0)
     return TRUE;
 
-  p = bfd_malloc (sec->rawsize > sec->size ? sec->rawsize : sec->size);
+  p = bfd_zmalloc (sec->rawsize > sec->size ? sec->rawsize : sec->size);
   if (p == NULL)
     return FALSE;
   *buf = p;
diff -pruN binutils-2.19.51.orig/gas/doc/as.texinfo binutils-2.19.51/gas/doc/as.texinfo
--- binutils-2.19.51.orig/gas/doc/as.texinfo	2009-09-04 12:31:44.000000000 +1000
+++ binutils-2.19.51/gas/doc/as.texinfo	2009-09-08 17:51:26.000000000 +1000
@@ -84,14 +84,13 @@
 @c might as well show 'em anyways.
 @end ifinfo
 
-@ifinfo
-@format
-START-INFO-DIR-ENTRY
+@ifnottex
+@dircategory Software development
+@direntry
 * As: (as).                     The GNU assembler.
 * Gas: (as).                    The GNU assembler.
-END-INFO-DIR-ENTRY
-@end format
-@end ifinfo
+@end direntry
+@end ifnottex
 
 @finalout
 @syncodeindex ky cp
diff -pruN binutils-2.19.51.orig/gprof/gprof.texi binutils-2.19.51/gprof/gprof.texi
--- binutils-2.19.51.orig/gprof/gprof.texi	2009-06-13 01:33:30.000000000 +1000
+++ binutils-2.19.51/gprof/gprof.texi	2009-09-08 17:51:26.000000000 +1000
@@ -10,15 +10,14 @@
 @include bfdver.texi
 @c man end
 
-@ifinfo
+@ifnottex
 @c This is a dir.info fragment to support semi-automated addition of
 @c manuals to an info tree.  zoo@cygnus.com is developing this facility.
-@format
-START-INFO-DIR-ENTRY
+@dircategory Software development
+@direntry
 * gprof: (gprof).                Profiling your program's execution
-END-INFO-DIR-ENTRY
-@end format
-@end ifinfo
+@end direntry
+@end ifnottex
 
 @copying
 This file documents the gprof profiler of the GNU system.
@@ -147,6 +146,10 @@ its symbol table and the call graph prof
 If more than one profile file is specified, the @code{gprof}
 output shows the sum of the profile information in the given profile files.
 
+If you use gcc 2.95.x or 3.0 to compile your binaries, you may need
+to add the @samp{-fprofile-arcs} to the compile command line in order
+for the call graphs to be properly stored in gmon.out.
+
 @code{Gprof} calculates the amount of time spent in each routine.
 Next, these times are propagated along the edges of the call graph.
 Cycles are discovered, and calls into a cycle are made to share the time
@@ -191,7 +194,7 @@ summarized dynamic call graph and profil
 @c man end
 
 @c man begin SEEALSO
-monitor(3), profil(2), cc(1), prof(1), and the Info entry for @file{gprof}.
+cc(1), prof(1), and the Info entry for @file{gprof}.
 
 ``An Execution Profiler for Modular Programs'',
 by S. Graham, P. Kessler, M. McKusick;
@@ -278,6 +281,11 @@ to do the linking, simply specify @samp{
 options.  The same option, @samp{-pg}, alters either compilation or linking
 to do what is necessary for profiling.  Here are examples:
 
+If you use gcc 2.95.x or 3.0.x, you may need to add the
+@samp{-fprofile-arcs} option to the compile line along with @samp{-pg}
+in order to allow the call-graphs to be properly included in the gmon.out
+file.
+
 @example
 cc -g -c myprog.c utils.c -pg
 cc -o myprog myprog.o utils.o -pg
diff -pruN binutils-2.19.51.orig/ld/emulparams/elf_i386.sh binutils-2.19.51/ld/emulparams/elf_i386.sh
--- binutils-2.19.51.orig/ld/emulparams/elf_i386.sh	2009-07-30 00:59:23.000000000 +1000
+++ binutils-2.19.51/ld/emulparams/elf_i386.sh	2009-09-08 17:51:26.000000000 +1000
@@ -13,3 +13,13 @@ GENERATE_PIE_SCRIPT=yes
 NO_SMALL_DATA=yes
 SEPARATE_GOTPLT=12
 IREL_IN_PLT=
+
+# Linux modify the default library search path to first include
+# a 32-bit specific directory.
+case "$target" in
+  x86_64*-linux* | i[3-7]86*-linux* | x86_64*-kfreebsd*-gnu | i[3-7]86*-kfreebsd*-gnu)
+    case "$EMULATION_NAME" in
+      *i386*) LIBPATH_SUFFIX=32 ;;
+    esac
+    ;;
+esac
diff -pruN binutils-2.19.51.orig/ld/emultempl/elf32.em binutils-2.19.51/ld/emultempl/elf32.em
--- binutils-2.19.51.orig/ld/emultempl/elf32.em	2009-09-02 17:25:35.000000000 +1000
+++ binutils-2.19.51/ld/emultempl/elf32.em	2009-09-08 17:51:26.000000000 +1000
@@ -1231,6 +1231,8 @@ fragment <<EOF
 	      && command_line.rpath == NULL)
 	    {
 	      lib_path = (const char *) getenv ("LD_RUN_PATH");
+	      if ((lib_path) && (strlen (lib_path) == 0))
+		lib_path = NULL;
 	      if (gld${EMULATION_NAME}_search_needed (lib_path, &n,
 						      force))
 		break;
@@ -1416,6 +1418,8 @@ gld${EMULATION_NAME}_before_allocation (
   rpath = command_line.rpath;
   if (rpath == NULL)
     rpath = (const char *) getenv ("LD_RUN_PATH");
+  if ((rpath) && (strlen (rpath) == 0))
+      rpath = NULL;
   if (! (bfd_elf_size_dynamic_sections
 	 (link_info.output_bfd, command_line.soname, rpath,
 	  command_line.filter_shlib,
diff -pruN binutils-2.19.51.orig/ld/ldint.texinfo binutils-2.19.51/ld/ldint.texinfo
--- binutils-2.19.51.orig/ld/ldint.texinfo	2009-09-02 17:25:35.000000000 +1000
+++ binutils-2.19.51/ld/ldint.texinfo	2009-09-08 17:51:26.000000000 +1000
@@ -4,13 +4,12 @@
 @c 2003, 2005, 2006, 2007
 @c Free Software Foundation, Inc.
 
-@ifinfo
-@format
-START-INFO-DIR-ENTRY
+@ifnottex
+@dircategory Software development
+@direntry
 * Ld-Internals: (ldint).	The GNU linker internals.
-END-INFO-DIR-ENTRY
-@end format
-@end ifinfo
+@end direntry
+@end ifnottex
 
 @copying
 This file documents the internals of the GNU linker ld.
diff -pruN binutils-2.19.51.orig/ld/ld.texinfo binutils-2.19.51/ld/ld.texinfo
--- binutils-2.19.51.orig/ld/ld.texinfo	2009-07-06 23:48:51.000000000 +1000
+++ binutils-2.19.51/ld/ld.texinfo	2009-09-08 17:51:26.000000000 +1000
@@ -39,13 +39,12 @@
 @end ifset
 @c man end
 
-@ifinfo
-@format
-START-INFO-DIR-ENTRY
+@ifnottex
+@dircategory Software development
+@direntry
 * Ld: (ld).                       The GNU linker.
-END-INFO-DIR-ENTRY
-@end format
-@end ifinfo
+@end direntry
+@end ifnottex
 
 @copying
 This file documents the @sc{gnu} linker LD
diff -pruN binutils-2.19.51.orig/ld/Makefile.am binutils-2.19.51/ld/Makefile.am
--- binutils-2.19.51.orig/ld/Makefile.am	2009-09-02 06:56:51.000000000 +1000
+++ binutils-2.19.51/ld/Makefile.am	2009-09-08 17:51:26.000000000 +1000
@@ -24,7 +24,7 @@ AM_CFLAGS = $(WARN_CFLAGS)
 # We put the scripts in the directory $(scriptdir)/ldscripts.
 # We can't put the scripts in $(datadir) because the SEARCH_DIR
 # directives need to be different for native and cross linkers.
-scriptdir = $(tooldir)/lib
+scriptdir = $(libdir)
 
 EMUL = @EMUL@
 EMULATION_OFILES = @EMULATION_OFILES@
diff -pruN binutils-2.19.51.orig/ld/Makefile.in binutils-2.19.51/ld/Makefile.in
--- binutils-2.19.51.orig/ld/Makefile.in	2009-09-02 06:56:51.000000000 +1000
+++ binutils-2.19.51/ld/Makefile.in	2009-09-08 17:51:26.000000000 +1000
@@ -333,7 +333,7 @@ AM_CFLAGS = $(WARN_CFLAGS)
 # We put the scripts in the directory $(scriptdir)/ldscripts.
 # We can't put the scripts in $(datadir) because the SEARCH_DIR
 # directives need to be different for native and cross linkers.
-scriptdir = $(tooldir)/lib
+scriptdir = $(libdir)
 BASEDIR = $(srcdir)/..
 BFDDIR = $(BASEDIR)/bfd
 INCDIR = $(BASEDIR)/include
diff -pruN binutils-2.19.51.orig/ld/testsuite/config/default.exp binutils-2.19.51/ld/testsuite/config/default.exp
--- binutils-2.19.51.orig/ld/testsuite/config/default.exp	2009-09-02 17:25:37.000000000 +1000
+++ binutils-2.19.51/ld/testsuite/config/default.exp	2009-09-08 17:51:26.000000000 +1000
@@ -119,10 +119,10 @@ proc get_link_files {varname} {
 	#makefile rules, with embedded shell variable expansions.
 	#make wants $$shell_var, we want $shell_var ...
 	set cmd "host='$target_triplet' && . $srcdir/../configure.host && sed -e 's,\\\$\\\$,\$,g' <<EOF\n\$$varname\nEOF"
-	set status [catch "exec sh -c [list $cmd]" result]
+	set status [catch "exec bash -c [list $cmd]" result]
 	if $status { error "Error getting native link files: $result" }
 	set cmd "CC='$CC' && eval echo \"$result\""
-	set status [catch "exec sh -c [list $cmd]" result]
+	set status [catch "exec bash -c [list $cmd]" result]
 	if $status { error "Error getting native link files: $result" }
 	set $varname $result
 	send_log "$varname = $result\n"
@@ -132,7 +132,7 @@ proc get_link_files {varname} {
 proc get_target_emul {} {
     global target_triplet
     global srcdir
-    set status [catch "exec sh -c \"targ='$target_triplet' && . $srcdir/../configure.tgt && echo \\\$targ_emul\"" result]
+    set status [catch "exec bash -c \"targ='$target_triplet' && . $srcdir/../configure.tgt && echo \\\$targ_emul\"" result]
     if $status { error "Error getting emulation name: $result" }
     return $result
 }
